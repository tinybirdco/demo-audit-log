TOKEN ui_token READ


DESCRIPTION >
	Retrieves the timestamp and log message


NODE filtered_logs
SQL >

    %
      SELECT 
        company_id, 
        payload_author,
        event,
        payload_entity_id,
        datetime
      FROM kafka_audit_log
      WHERE 1=1
      {%if defined(company_id) and company_id!='All'%}
        AND company_id in 
          (select company_id 
           from companies 
           where name = {{sql_unescape(String(company_id, description="Company id"))}})
      {%end%}
      {%if defined(event_like)%}
        AND event like concat('%',{{String(event_like, description="part of the event name")}},'%')
      {%elif defined(event_exact) and event_exact != 'All'%}
        AND event ={{String(event_exact, description="exact match of event name")}}
      {%end%}
      {%if defined(start_date) and defined(end_date)%}
        AND toDateTime(datetime) BETWEEN 
          toDateTime({{DateTime(start_date, description="Start date. Format YYYY-MM-DD HH:MM:SS")}}) 
          AND toDateTime({{DateTime(end_date, description="End date. Format YYYY-MM-DD HH:MM:SS")}})
      {%end%}
      ORDER BY datetime desc
      LIMIT {{Int32(page_size, 100)}}
      OFFSET {{Int32(page, 0) * Int32(page_size, 100)}}



NODE message_endpoint
SQL >

    SELECT 
      datetime, 
      concat(payload_author, ' from ', name, ' did ', event ,' on ', payload_entity_id) as message 
    FROM filtered_logs
    join companies 
    using company_id



NODE endpoint_from_mv
DESCRIPTION >
    node retrieving from the datasource with the desired schema

SQL >

    %
      SELECT 
        datetime, 
        concat(payload_author, ' from ', name, ' did ', event ,' on ', payload_entity_id) as message 
      FROM enriched_events_mv
      WHERE 1=1
      {%if defined(company_id) and company_id!='All'%}
        AND name = {{sql_unescape(String(company_id, description="Company id"))}}
      {%end%}
      {%if defined(event_like)%}
        AND event like concat('%',{{String(event_like, description="part of the event name")}},'%')
      {%elif defined(event_exact) and event_exact != 'All'%}
        AND event ={{String(event_exact, description="exact match of event name")}}
      {%end%}
      {%if defined(start_date) and defined(end_date)%}
        AND toDateTime(datetime) BETWEEN 
          toDateTime({{DateTime(start_date, description="Start date. Format YYYY-MM-DD HH:MM:SS")}}) 
          AND toDateTime({{DateTime(end_date, description="End date. Format YYYY-MM-DD HH:MM:SS")}})
      {%end%}
      ORDER BY datetime desc
      LIMIT {{Int32(page_size, 100)}}
      OFFSET {{Int32(page, 0) * Int32(page_size, 100)}}


